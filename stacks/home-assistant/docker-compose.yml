---
version: '3.7'
services:

########################################################################################
# Home Assistant
# https://www.home-assistant.io/installation/raspberrypi#docker-compose
########################################################################################

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    container_name: homeassistant
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG_DIR}/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 8123:8123
    restart: unless-stopped
    privileged: true
    network_mode: host
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0

  zwavejs2mqtt:
    container_name: zwavejs2mqtt
    image: zwavejs/zwavejs2mqtt:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=${ZWAVEJS2MQTT_SESSION_SECRET}
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - TZ=${TZ}
    networks:
      - traefik
    devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      - '/dev/serial/by-id/${ZWAVE_DEVICE_ID}:/dev/zwave'
    volumes:
      - ${CONFIG_DIR}/zwavejs2mqtt:/usr/src/app/store
    ports:
      - '3000:3000' # port for Z-Wave JS websocket server
      # - '8091:8091' # port for web interface
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.zwavejs2mqtt-rtr.entrypoints=websecure"
      - "traefik.http.routers.zwavejs2mqtt-rtr.rule=Host(`zwavejs2mqtt.$FQDN`)"
      - "traefik.http.routers.zwavejs2mqtt-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.zwavejs2mqtt-rtr.middlewares=chain-oauth@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.zwavejs2mqtt-rtr.service=zwavejs2mqtt-svc"
      - "traefik.http.services.zwavejs2mqtt-svc.loadbalancer.server.port=8091"

  ring-mqtt:
    container_name: ring-mqtt
    restart: unless-stopped
    image: tsightler/ring-mqtt
    networks:
      - traefik
    # ports:
    #   - 8554:8554                      # Enable RTSP port for external media player access
    volumes:
      - ${VOLUME_DIR}/ring-mqtt:/data  # Mapping of local folder to provide persistant storage
    environment:                       
      - RINGTOKEN=${RINGTOKEN}         # Required for initial startup, see: https://github.com/tsightler/ring-mqtt/blob/main/docs/DOCKER.md#authentication
      - MQTTHOST=mosquitto             # Hostname or IP of MQTT Broker
      - MQTTPORT=1883                  # TCP port for MQTT Broker
      - MQTTUSER=${USERNAME}           # CHANGE ME -- Username for MQTT Broker (remove for anonymous)
      - MQTTPASSWORD=${MOSQUITTO_PASSWORD}     # CHANGE ME -- Password for MQTT Broker (remove for anonymous)
      - ENABLECAMERAS=false            # Enable camera support
      - SNAPSHOTMODE=disabled          # Snapshot options (see: https://github.com/tsightler/ring-mqtt#snapshot-options)
      # - LIVESTREAMUSER=stream_user     # CHANGE ME -- Highly recommended if RTSP server is exposed
      # - LIVESTREAMPASSWORD=stream_pass # CHANGE ME -- Highly recommended if RTSP server is exposed
    logging:                           #limit logs to 10m and 3 files
      options:
        max-size: 10m
        max-file: "3"

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - MOSQUITTO_USERNAME=${USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
    ports:
      - 1883:1883
      # - 8883:8883
    volumes:
      - ${VOLUME_DIR}/mosquitto/data:/mosquitto/data
      - ${VOLUME_DIR}/mosquitto/logs:/mosquitto/log
      - ${CONFIG_DIR}/mosquitto:/mosquitto/config
    restart: unless-stopped
    networks:
      - traefik

networks:
  backend:
    name: backend
    external: true
    #run: docker network create backend
