---
name: invoiceninja-debian

x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

services:
  invoiceninja:
    image: invoiceninja/invoiceninja-debian:5
    container_name: invoiceninja2
    restart: unless-stopped
    environment: 
      - APP_URL=http://in-debian.${FQDN}
      - APP_KEY=${IN_APP_KEY}
      - REQUIRE_HTTPS=true
      - TRUSTED_PROXIES=*
      - APP_DEBUG=false
      - DB_HOST1=invoiceninja2-db.traefik
      - DB_DATABASE1=ninja
      - DB_USERNAME1=ninja
      - DB_PASSWORD1=${IN_DB_PASSWORD}
      - IN_USER_EMAIL=${EMAIL}
      - IN_PASSWORD=${IN_PASSWORD}
      - CONFIG_PATH=invoiceninja-debian/debian
    volumes:
      - type: bind
        source: ${CONFIG_DIR}/invoiceninja-debian/debian/php/php.ini
        target: /usr/local/etc/php/conf.d/zzz-php.ini
        read_only: true
        bind:
          create_host_path: false
      - type: bind
        source: ${CONFIG_DIR}/invoiceninja-debian/debian/php/php-fpm.conf
        target: /usr/local/etc/php-fpm.d/zzz-php-fpm.conf
        read_only: true
        bind:
          create_host_path: false
      - type: bind
        source: ${CONFIG_DIR}/invoiceninja-debian/debian/supervisor/supervisord.conf
        target: /etc/supervisor/conf.d/supervisord.conf
        read_only: true
        bind:
          create_host_path: false
      - ${VOLUME_DIR}/invoiceninja-debian/cache:/var/www/html/bootstrap/cache
      - ${VOLUME_DIR}/invoiceninja-debian/public:/var/www/html/public
      - ${VOLUME_DIR}/invoiceninja-debian/storage:/var/www/html/storage
    networks:
      - traefik
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging: *default-logging

  nginx:
    image: nginx:alpine
    container_name: invoiceninja2-nginx
    restart: unless-stopped
    ports:
      - 81:80
    volumes:
      - source: ${CONFIG_DIR}/invoiceninja-debian/debian/nginx
        target: /etc/nginx/conf.d
        type: bind
        read_only: true
        bind:
          create_host_path: false
      - ${VOLUME_DIR}/invoiceninja-debian/public:/var/www/html/public:ro
      - ${VOLUME_DIR}/invoiceninja-debian/storage:/var/www/html/storage:ro
    networks:
      - traefik
    depends_on:
      - invoiceninja
    logging: *default-logging
    labels:
      - autoheal=true
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.in-rtr.entrypoints=websecure
      - traefik.http.routers.in-rtr.rule=Host(`in-debian.$FQDN`)
      - traefik.http.routers.in-rtr.tls=true
      ## Middlewares
      - traefik.http.routers.in-rtr.middlewares=chain-no-auth@file # No Authentication
      # - traefik.http.routers.in-rtr.middlewares=chain-basic-auth@file # Basic Authentication
      # - traefik.http.routers.in-rtr.middlewares=chain-oauth2-proxy@file # OAuth 2.0
      ## HTTP Services
      - traefik.http.routers.in-rtr.service=in-svc
      - traefik.http.services.in-svc.loadbalancer.server.port=81


  mysql:
    image: container-registry.oracle.com/mysql/community-server:8.4-aarch64
    container_name: invoiceninja2-db
    restart: unless-stopped
    env_file:
      - ./.env
    environment: 
      - MYSQL_ROOT_PASSWORD=${IN_DB_ROOT_PASSWORD}
      - MYSQL_USER=ninja
      - MYSQL_PASSWORD=${IN_DB_PASSWORD}
      - MYSQL_DATABASE=ninja
      - MYSQL_ROOT_HOST=invoiceninja2.traefik
    volumes:
      - ${VOLUME_DIR}/invoiceninja-debian/db:/var/lib/mysql
    networks:
      - traefik
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    logging: *default-logging

  redis:
    image: redis:alpine
    container_name: invoiceninja2-redis
    restart: unless-stopped
    volumes:
      - ${VOLUME_DIR}/invoiceninja-debian/redis:/data
    networks:
      - traefik
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

networks:
  traefik:
    name: traefik
    external: true
    #run: docker network create traefik