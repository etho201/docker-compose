---
version: '3.8'
services:

########################################################################################
# oauth2
# https://quay.io/repository/pusher/oauth2_proxy
# https://github.com/pusher/oauth2_proxy
# https://github.com/pusher/oauth2_proxy/issues/46
########################################################################################

  oauth2:
    container_name: oauth2
    image: quay.io/oauth2-proxy/oauth2-proxy:latest-arm64
    command:
      - "--cookie-domain=${FQDN}"
      - "--cookie-secure=false"
      - "--email-domain=*"
      # - "--github-org=${GITHUB_ORG}"
      - "--github-user=${GITHUB_USER}" # allow logins by username, separated by a comma
      - "--http-address=0.0.0.0:4180"
      - "--reverse-proxy=true"
      - "--pass-access-token"
      - "--provider=github"
      - "--redirect-url=https://${FQDN}/oauth2/callback"
      - "--set-authorization-header"
      - "--set-xauthrequest"
      - "--whitelist-domain=.${FQDN}"
    environment:
      - "OAUTH2_PROXY_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID?err}"
      - "OAUTH2_PROXY_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET?err}"
      - "OAUTH2_PROXY_COOKIE_SECRET=${OAUTH2_PROXY_COOKIE_SECRET?err}"
      - "OAUTH2_PROXY_COOKIE_DOMAINS: ${FQDN?err}"
      - "OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180"
      - "OAUTH2_PROXY_PASS_BASIC_AUTH=false"
      - "OAUTH2_PROXY_PASS_USER_HEADERS=true"
      - "OAUTH2_PROXY_REVERSE_PROXY=true"
      - "OAUTH2_PROXY_SET_AUTHORIZATION_HEADER=true"
      - "OAUTH2_PROXY_SET_XAUTHREQUEST=true"
      - "OAUTH2_PROXY_WHITELIST_DOMAIN=.${FQDN?err}"
      - "OAUTH2_PROXY_REDIRECT_URL=https://oauth2.${FQDN}/oauth2/callback"
    expose:
      - "4180"
    #ports:
      #- 4180:4180
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.oauth2-rtr.entrypoints=websecure"
      # - "traefik.http.routers.oauth2-rtr.rule=Host(`oauth2.${FQDN}`)"
      # - "traefik.http.routers.oauth2-rtr.rule=Host(`${FQDN}`) && PathPrefix(`/oauth2`)"
      - "traefik.http.routers.oauth2-rtr.rule=Host(`oauth2.${FQDN?err}`) || PathPrefix(`/oauth2`)"
      - "traefik.http.routers.oauth2-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.oauth2-rtr.middlewares=chain-oauth2@file"
      ## HTTP Services
      - "traefik.http.routers.oauth2-rtr.service=oauth2-svc"
      - "traefik.http.services.oauth2-svc.loadbalancer.server.port=4180"
      - "traefik.http.services.oauth2-svc.loadBalancer.passHostHeader=false"
      ## Other labels
      - "traefik.http.middlewares.oauth2-verify.forwardAuth.address=http://oauth2:4180/oauth2/auth"
      - "traefik.http.middlewares.oauth2-verify.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.oauth2-verify.forwardAuth.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email,Set-Cookie,X-Auth-User,X-Secret"
      - "traefik.http.middlewares.oauth2-signin.errors.service=oauth2@file"
      - "traefik.http.middlewares.oauth2-signin.errors.status=401"
      - "traefik.http.middlewares.oauth2-signin.errors.query=/oauth2/sign_in"
      # - "traefik.http.routers.oauth2.tls.certResolver=default"
      # - "traefik.http.routers.oauth2.service=oauth2@file"
      # - "traefik.http.services.oauth2.loadbalancer.server.port=4180"
    networks:
      - traefik
    restart: unless-stopped

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.whoami-rtr.entrypoints=websecure"
      - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$FQDN`)"
      - "traefik.http.routers.whoami-rtr.tls=true"
      ## Middlewares
      # - "traefik.http.routers.whoami-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.whoami-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      # - "traefik.http.routers.whoami-rtr.middlewares=chain-oauth@file" # OAuth 2.0
      - "traefik.http.routers.whoami-monitoring.middlewares=oauth-signin,oauth-verify,default-https"
      ## HTTP Services
      - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"

networks:
  traefik:
    external:
      name: traefik
      #run: docker network create traefik