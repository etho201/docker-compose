---
version: '3.7'
services:

########################################################################################
# Unifi Controller
# https://hub.docker.com/r/linuxserver/unifi-controller
########################################################################################

  unifi-controller:
    image: linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      #- MEM_LIMIT=1024M #Optionally change the Java memory limit (-Xmx) (default is 1024M)
    volumes:
      - ${CONFIG_DIR}/unifi-controller:/config #Config
      - ${VOLUME_DIR}/unifi-controller:/config/data #Data dir grows to 250MB+
    ports:
      - 3478:3478/udp #For STUN
      #- 10001:10001/udp #required for AP discovery
      - 8080:8080 #For device and controller communication.
      #- 8081:8081 #Unifi communication port
      #- 8443:8443 #For controller GUI/API as seen in a web browser
      #- 8843:8843 #Unifi communication port
      #- 8880:8880 #For HTTP portal redirection.
      #- 6789:6789 #For UniFi mobile speed test.
    restart: unless-stopped
    networks:
      - backend
    labels:
      # Traefik Configuration
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.unifi-rtr.entrypoints=websecure"
      - "traefik.http.routers.unifi-rtr.rule=HostHeader(`unifi.$FQDN`)"
      - "traefik.http.routers.unifi-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.unifi-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.unifi-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      # - "traefik.http.routers.unifi-rtr.middlewares=chain-oauth@file" # OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.unifi-rtr.service=unifi-svc"
      - "traefik.http.services.unifi-svc.loadbalancer.server.port=8443"

networks:
  #frontend:
    #external:
      #name: frontend
      #run: docker network create --name=frontend
  backend:
    external:
      name: backend
      #run: docker network create --name=backend
